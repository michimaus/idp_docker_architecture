version: '3.7'

services:

  idp_postgres:
    hostname: "${DB_HOSTNAME}"
    image: postgres:14.2-alpine
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    # networks:
    #   - rest_api_network
    #   - db_management_network
    restart: always
    healthcheck:
      # test: ["CMD", "pg_isready -U postgres"]
      test: pg_isready -U postgres
      interval: 5s
      timeout: 2s
      retries: 15

###########################################################################

  idp_rabbitmq:
    hostname: "${MQ_HOSTNAME}"
    image: rabbitmq:3.10-management
    ports:
      - "${MQ_PORT}:${MQ_PORT}"
      - "${MQ_PORT_MANAGEMENT}:${MQ_PORT_MANAGEMENT}"
    environment:
      - "RABBITMQ_DEFAULT_USER=${MQ_USERNAME}"
      - "RABBITMQ_DEFAULT_PASS=${MQ_PASSWORD}"
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 2s
      retries: 15

###########################################################################

  idp_keycloak:
    hostname: "${KEY_CLOCK_HOSTNAME}"
    image: jboss/keycloak:16.1.1
    ports:
      - "${KEY_CLOCK_PORT_IN}:${KEY_CLOCK_PORT_OUT}"
      - "${KEY_CLOCK_PORT_ADMIN}:${KEY_CLOCK_PORT_ADMIN}"
      - "${KEY_CLOCK_PORT_AUX}:${KEY_CLOCK_PORT_AUX}"
    environment:
      - "DB_VENDOR=POSTGRES"
      - "DB_ADDR=${DB_HOSTNAME}"
      - "DB_PORT=${DB_PORT}"
      - "DB_DATABASE=${DB_NAME}"
      - "DB_SCHEMA=${DB_SCHEMA}"
      ###########################################
      # In mod bizar se comenteaza cele doua variabile de mai jos, se ruleaza apoi se decomenteaza si miraculos merge...
      - "KEYCLOAK_USER=${KEY_CLOCK_USERNAME}"
      - "KEYCLOAK_PASSWORD=${KEY_CLOCK_PASSWORD}"
      ###########################################
      - "DB_USER=${DB_USERNAME}"
      - "DB_PASSWORD=${DB_PASSWORD}"
      - "KEYCLOAK_IMPORT=/tmp/example-realm.json"
    depends_on:
      idp_postgres:
        condition: service_healthy
    volumes:
      - ./keycloak_imports/realm-export_good.json:/tmp/example-realm.json
    restart: always
    healthcheck:
      test: curl -f http://localhost:8080/auth/
      interval: 5s
      timeout: 2s
      retries: 15

###########################################################################

  idp_spring_boot_api:
    hostname: "${API_HOSTNAME}"
    image: 127.0.0.1:8888/idp_spring_boot_api
    ports:
      - "${SERVER_API_PORT}:${SERVER_API_PORT}"
    depends_on:
      idp_postgres:
        condition: service_healthy
      idp_rabbitmq:
        condition: service_healthy
      idp_keycloak:
        condition: service_healthy
    build:
      context: ../proiect_refugiati_api
      dockerfile: refugiati.Dockerfile
    restart: always
    healthcheck:
      test: curl -f http://localhost:8888/check/2
      interval: 5s
      timeout: 2s
      retries: 15

###########################################################################

  idp_angular_front:
    hostname: "${FRONT_HOSTNAME}"
    image: 127.0.0.1:4200/idp_angular_front
    ports:
      - "${FRONT_PORT}:${FRONT_PORT}"
      - "${FRONT_PORT_MANAGEMENT}:${FRONT_PORT_MANAGEMENT}"
    build:
      context: ../proiect_refugiati_front
      dockerfile: refugiati.Dockerfile
    restart: always
    depends_on:
      idp_spring_boot_api:
        condition: service_healthy
    # stdin_open: true
    # environment:
    #   - CHOKIDAR_USEPOLLING=true
